typeof类型检测
我们下来看饿en'看他们的类型分别是什么：
alert(typeof(false) === 'boolean');//true   
alert(typeof(0) === 'number');//true
alert(typeof("") === 'string');//true
alert(typeof(null) === 'object');//trueಠ_ಠ
alert(typeof undefined === 是'undefined'); //tru e 

结论：false是布尔类型对，0是数字类型对象，空字符串是字符串类型对象，null是object对象，undefined类型还是undefined。

当你用==操作符将false对象和其他对象进行比较的时候，你会发现，只有0和空字符串等于false；undefined和null对象并不等于false对象，而null和undefined是相等的
    alert(false == undefined);
    alert(false == null);
    alert(false == 0);
    alert(false == "");
    alert(null == undefined);
结论：把0、空字符串和false归为一类，称为“假值”；把null和undefined归为一类，称为“空值”。假值还算一个有效的对象，因此可以对其使用toString等类型相关的方法，而空值则不行。下面的代码将会抛出异常：
    alert(false.toString());    // "false"
    alert("".charAt(0));        // ""
    alert((0).toExponential(10));  // 0.0000000e+0哪ಠ_ಠn
    alert(undefined.toString());    // throw exception "undefined has no properties"
    alert(null.toString());             // "null has no properties"
--------------------------------------------------------------------------------
虽然空值不能调用toString方法，但是却可以使用String构造函数进行构造。像decodeURI这样的函数，如果传入的是undefined或者null，返回的是“undefined”和“null”字符串。这点很容易用错。
    alert(String(false));    // "false"
    alert(String(""));        // ""
    alert(String(0));  // 0.0000000e+0
    alert(String(undefined));    // "undefined"
    alert(String(null));             // "null“
    alert(decodeURI(undefined));// "undefined"
    alert(decodeURI(null));// "null"
--------------------------------------------------------------------------------
在Javascript中，变量是通过var声明，=赋值符进行定义（初始化变量所指向的对象）。当然，如果声明一个全局变量（作为window属性）可以不使用var关键字。变量可以在声明的同时进行定义。
其实，变量如果声明了但是没有初始化，那么Javascript引擎会将此变量自动指向undefined对象。
这里需要注意，我们在上面引用window.abcd时，弹出的是undefined；而直接引用abcd变量时，却抛出了一个异常。这是由于Javascript引擎对于没有显式指定对象链的变量，会尝试从最近的作用域开始查找变量，查找失败，则退到父级作用链进行查找。如果均查找失败，则抛出“变量未定义”的异常。
